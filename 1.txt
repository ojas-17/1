CREATE TABLE PUBLISHER 
(NAME VARCHAR2 (20), 
PHONE INTEGER, 
ADDRESS VARCHAR2 (20), 
CONSTRAINT PKP PRIMARY KEY(NAME)); 
 
CREATE TABLE BOOK 
(BOOK_ID VARCHAR(8), 
TITLE VARCHAR2 (20), 
PUBLISHER_NAME VARCHAR(20), 
PUB_YEAR INTEGER, 
CONSTRAINT PKB PRIMARY KEY(BOOK_ID), 
CONSTRAINT FKB FOREIGN KEY(PUBLISHER_NAME) REFERENCES 
PUBLISHER(NAME)); 
 
CREATE TABLE BOOK_AUTHORS 
(BOOK_ID VARCHAR(8), 
AUTHOR_NAME VARCHAR2 (20), 
CONSTRAINT PKBA PRIMARY KEY (BOOK_ID,AUTHOR_NAME), 
CONSTRAINT FKBA FOREIGN KEY(BOOK_ID) REFERENCES BOOK(BOOK_ID)ON 
DELETE CASCADE); 
 
CREATE TABLE LIBRARY_BRANCH 
(BRANCH_ID VARCHAR(6), 
BRANCH_NAME VARCHAR2 (20), 
ADDRESS VARCHAR2 (20), 
CONSTRAINT PKLB PRIMARY KEY(BRANCH_ID)); 
 
CREATE TABLE BOOK_COPIES 
(BOOK_ID VARCHAR(8), 
BRANCH_ID VARCHAR2(6), 
NO_OF_COPIES INTEGER, 
CONSTRAINT PKBC PRIMARY KEY(BOOK_ID, BRANCH_ID), 
CONSTRAINT FKBC FOREIGN KEY(BOOK_ID) REFERENCES BOOK(BOOK_ID) ON DELETE CASCADE, 
CONSTRAINT FKBB FOREIGN KEY(BRANCH_ID) REFERENCES LIBRARY_BRANCH(BRANCH_ID)); 
 
CREATE TABLE BOOK_LENDING 
(BOOK_ID VARCHAR(8), 
BRANCH_ID VARCHAR2(6), 
CARD_NO INTEGER, 
DATE_OUT DATE, 
DUE_DATE DATE, 
CONSTRAINT PKBL PRIMARY KEY(BOOK_ID, BRANCH_ID,CARD_NO), 
CONSTRAINT FKBL FOREIGN KEY(BOOK_ID) REFERENCES BOOK(BOOK_ID)ON DELETE CASCADE);

SELECT B.BOOK_ID, B.TITLE, B.PUBLISHER_NAME, A.AUTHOR_NAME, 
C.NO_OF_COPIES, L.BRANCH_ID 
FROM BOOK B, BOOK_AUTHORS A, BOOK_COPIES C, LIBRARY_BRANCH L 
WHERE B.BOOK_ID=A.BOOK_ID 
AND B.BOOK_ID=C.BOOK_ID 
AND L.BRANCH_ID=C.BRANCH_ID; 

SELECT CARD_NO 
FROM BOOK_LENDING 
WHERE DATE_OUT BETWEEN '01-JAN-2017' AND '01-JUL-2017' 
GROUP BY CARD_NO 
HAVING COUNT (*)>3;

DELETE FROM BOOK 
WHERE BOOK_ID='3'; 

CREATE TABLE BOOKPART 
PARTITION BY RANGE (PUB_YEAR) 
(PARTITION P1 VALUES LESS THAN(2016), 
PARTITION P2 VALUES LESS THAN (MAXVALUE)) 
AS SELECT * FROM BOOK; 

CREATE VIEW BC AS SELECT B.BOOK_ID,C.TITLE,B.BRANCH_ID, 
(B.NO_OF_COPIES-(SELECT COUNT(*)  FROM BOOK_LENDING  WHERE 
B.BOOK_ID=BOOK_ID AND B.BRANCH_ID=BRANCH_ID)) AS NO_COPY                        
FROM BOOK_COPIES B,BOOK C 
WHERE B.BOOK_ID=C.BOOK_ID; 
